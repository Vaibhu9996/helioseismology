Syntax for Python v2.7

1. Use of keywords: The keywords in Python v2.7 such as 'import', 'print', 'for', 'if', etc. are reserved for specific purpose and are usually denoted by colours. For example, the keyword 'print' is shown in red colour automatically.

2. Names of data objects (variables): The names of data objects can be anything except keywords. However, space is not allowed. If the variable has two words in itself, an underscore or capitalisation of the initials is used to denote the two words. For example, if we want to use "file object" as our data object, then it will be written as "file_object" or "fileObject" as the programmer wishes. There is no need to declare data objects and their data types prior to use in Python. Python automatically defines the data type for the given data object as per its use further in program. The data objects once used, cannot be reused for other purpose. That means, if a data object is used for integer values, then it cannot be reused in the program for floating point values.

3. Indentation: Normally, for a loop(for, while, do-while) or a conditional statement (if), we use indentation to identify what comes within the loop and what comes outside of it. One indentation (i.e. one "Tab" space which is usually equal to 8 spaces) means one loop. If the loop contains another loop within it, we need to give its commands another indentation. The data object used in the loop will work only in the indented statements and not outside it. This is the most common error that one might get when using a gedit text editor to write programs.

4. Use of inverted commas: The single and double inverted commas are used to define string objects. String objects can be used in many places (howsoever, our interest is limited to printing and labeling the axes). The use of inverted commas will give out pink coloured text and will be printed as-it-is in the output. No changes or error occurs for whatever you type within the inverted commas. However, you might see an error if you dont specify in the program what should be done with the string object. 'print' and 'label()' statements often do the job of specifying it.

5. Use of brackets: Python does not use any brackets for statements or body of the program. It uses a colon ':' to identify the body of a program, a loop, a conditional statement, a function or whatever it might be. But, it is observed that some programs do use the parenthesis (what we call the "round brackets") after print statements to give the thing to be printed in output. The parenthesis also denotes functions and separates them from the names of data objects. For example, the name 'factorial' is a data object which might store some data while, the name 'factorial()' will denote a function named factorial which will have some purpose.

6. Commenting: It is very important for a programer to write comments. This is done in order so that when a person (unknown) looks at your program, he gets a fair idea what you wanted to do. It often helps in discussions where we are supposed to find an error. Now, the single lined comments are given by an 'hash' (#) and are often used with 8 space (one "Tab") indentation after the statement to provide the reader knowledge about what the statement does. Multiple line comments are given within six single inverted commas (three before and three after) and are often used to give knowledge about the complete program and if any changes the initial programmer wants the reader to make. The multiple line comments become pink in colour and the single line statements are shown in blue. The comments are not processed by the interpreter when the program is run.

